name: Software Composition Analysis

on: [pull_request]
#  push:
#    paths:
#      - pyproject.toml
#      - poetry.lock
#  schedule:
#    - cron: '0 0 * * 0'  # Midnight, Sunday

permissions:
  contents: read
  actions: write

jobs:
  sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install cdxgen
        run: npm install -g @cyclonedx/cdxgen

      - name: Generate SBOM for C source code
        run: |
          cdxgen -r -t c -o sbom.json
          # Explanation:
          # -r : recursive scan
          # -t c : target type C/C++
          # -o sbom.json : output file
          # defaults to CycloneDX JSON format

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          if-no-files-found: error

  fossology:
    runs-on: ubuntu-latest
    needs: sbom
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom

      - name: Run FOSSology analysis
        id: fossology
        uses: fossology/fossology-action@v1
        with:
          scan_mode: "scan-only-deps"
          scanners: |
            - nomos
            - ojo
            - copyright
          report_format: "SPDX_JSON"
          sbom_path: "sbom.json"

      - name: Upload Scan Results Artifact 
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: Fossology scan results
          path: results/